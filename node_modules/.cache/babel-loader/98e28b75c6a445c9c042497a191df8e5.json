{"ast":null,"code":"import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\n/**\n * Convert a v1 UUID to a v6 UUID\n *\n * @param {string|Uint8Array} uuid - The v1 UUID to convert to v6\n * @returns {string|Uint8Array} The v6 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\n\nexport default function v1ToV6(uuid) {\n  var v1Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n\n  var v6Bytes = _v1ToV6(v1Bytes);\n\n  return typeof uuid === 'string' ? unsafeStringify(v6Bytes) : v6Bytes;\n} // Do the field transformation needed for v1 -> v6\n\nfunction _v1ToV6(v1Bytes) {\n  let randomize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return Uint8Array.of((v1Bytes[6] & 0x0f) << 4 | v1Bytes[7] >> 4 & 0x0f, (v1Bytes[7] & 0x0f) << 4 | (v1Bytes[4] & 0xf0) >> 4, (v1Bytes[4] & 0x0f) << 4 | (v1Bytes[5] & 0xf0) >> 4, (v1Bytes[5] & 0x0f) << 4 | (v1Bytes[0] & 0xf0) >> 4, (v1Bytes[0] & 0x0f) << 4 | (v1Bytes[1] & 0xf0) >> 4, (v1Bytes[1] & 0x0f) << 4 | (v1Bytes[2] & 0xf0) >> 4, 0x60 | v1Bytes[2] & 0x0f, v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}","map":{"version":3,"names":["parse","unsafeStringify","v1ToV6","uuid","v1Bytes","v6Bytes","_v1ToV6","randomize","Uint8Array","of"],"sources":["C:/Users/win/Desktop/Programação/organo/node_modules/uuid/dist/esm-browser/v1ToV6.js"],"sourcesContent":["import parse from './parse.js';\nimport { unsafeStringify } from './stringify.js';\n\n/**\n * Convert a v1 UUID to a v6 UUID\n *\n * @param {string|Uint8Array} uuid - The v1 UUID to convert to v6\n * @returns {string|Uint8Array} The v6 UUID as the same type as the `uuid` arg\n * (string or Uint8Array)\n */\nexport default function v1ToV6(uuid) {\n  var v1Bytes = typeof uuid === 'string' ? parse(uuid) : uuid;\n  var v6Bytes = _v1ToV6(v1Bytes);\n  return typeof uuid === 'string' ? unsafeStringify(v6Bytes) : v6Bytes;\n}\n\n// Do the field transformation needed for v1 -> v6\nfunction _v1ToV6(v1Bytes, randomize = false) {\n  return Uint8Array.of((v1Bytes[6] & 0x0f) << 4 | v1Bytes[7] >> 4 & 0x0f, (v1Bytes[7] & 0x0f) << 4 | (v1Bytes[4] & 0xf0) >> 4, (v1Bytes[4] & 0x0f) << 4 | (v1Bytes[5] & 0xf0) >> 4, (v1Bytes[5] & 0x0f) << 4 | (v1Bytes[0] & 0xf0) >> 4, (v1Bytes[0] & 0x0f) << 4 | (v1Bytes[1] & 0xf0) >> 4, (v1Bytes[1] & 0x0f) << 4 | (v1Bytes[2] & 0xf0) >> 4, 0x60 | v1Bytes[2] & 0x0f, v1Bytes[3], v1Bytes[8], v1Bytes[9], v1Bytes[10], v1Bytes[11], v1Bytes[12], v1Bytes[13], v1Bytes[14], v1Bytes[15]);\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACnC,IAAIC,OAAO,GAAG,OAAOD,IAAP,KAAgB,QAAhB,GAA2BH,KAAK,CAACG,IAAD,CAAhC,GAAyCA,IAAvD;;EACA,IAAIE,OAAO,GAAGC,OAAO,CAACF,OAAD,CAArB;;EACA,OAAO,OAAOD,IAAP,KAAgB,QAAhB,GAA2BF,eAAe,CAACI,OAAD,CAA1C,GAAsDA,OAA7D;AACD,C,CAED;;AACA,SAASC,OAAT,CAAiBF,OAAjB,EAA6C;EAAA,IAAnBG,SAAmB,uEAAP,KAAO;EAC3C,OAAOC,UAAU,CAACC,EAAX,CAAc,CAACL,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAvB,GAA2BA,OAAO,CAAC,CAAD,CAAP,IAAc,CAAd,GAAkB,IAA3D,EAAiE,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAvB,GAA2B,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAnH,EAAsH,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAvB,GAA2B,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAxK,EAA2K,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAvB,GAA2B,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAA7N,EAAgO,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAvB,GAA2B,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAlR,EAAqR,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAvB,GAA2B,CAACA,OAAO,CAAC,CAAD,CAAP,GAAa,IAAd,KAAuB,CAAvU,EAA0U,OAAOA,OAAO,CAAC,CAAD,CAAP,GAAa,IAA9V,EAAoWA,OAAO,CAAC,CAAD,CAA3W,EAAgXA,OAAO,CAAC,CAAD,CAAvX,EAA4XA,OAAO,CAAC,CAAD,CAAnY,EAAwYA,OAAO,CAAC,EAAD,CAA/Y,EAAqZA,OAAO,CAAC,EAAD,CAA5Z,EAAkaA,OAAO,CAAC,EAAD,CAAza,EAA+aA,OAAO,CAAC,EAAD,CAAtb,EAA4bA,OAAO,CAAC,EAAD,CAAnc,EAAycA,OAAO,CAAC,EAAD,CAAhd,CAAP;AACD"},"metadata":{},"sourceType":"module"}